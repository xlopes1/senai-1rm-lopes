#define trigPin 4 // Declara constante trigPin
#define echoPin 5 // Declara constante como echoPin
#define tempo 10 // Declara constante de tempo
 
int frequencia = 0; // Inicializa variável de frequência em 0
int duration, distance; // Inicializa variável de distância e tempo
 
void setup() {
 Serial.begin (9600);
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
 pinMode(11,OUTPUT); //amarelo como de saída.
 pinMode(12,OUTPUT); //verde como de saída.
 pinMode(13,OUTPUT); //vermelho como de saída.
}
 
void loop() {
 Serial.println("");
 Serial.print(millis()/1000);
 Serial.println(" segundo (s)");
 Serial.print("Distancia: ");
 Serial.println(distance);
 delay(1000);
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10);
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = (duration / 2) / 29.1; // Define base do cálculo de conversão

if (distance <=50) { // Define as distâncias bases de verificação
    digitalWrite(13 ,HIGH);
    delay(100);
    digitalWrite(13 ,LOW);
    delay(100);
    digitalWrite(12 ,LOW);
    digitalWrite(11 ,LOW);
}
if (distance >50 and distance <=100) { // Define as distâncias bases de verificação
    digitalWrite(13 ,HIGH);
    delay(200);
    digitalWrite(13 ,LOW);
    delay(200);
    digitalWrite(12 ,LOW);
    digitalWrite(11 ,LOW);
}
if (distance >100 and distance <=190) { // Define as distâncias bases de verificação
    digitalWrite(11 ,LOW);
    digitalWrite(12 ,LOW);
    digitalWrite(13 ,HIGH);
}
if (distance > 190 and distance <=280) { // Define as distâncias bases de verificação
    digitalWrite(11 ,HIGH);
    digitalWrite(12 ,LOW);
    digitalWrite(13 ,LOW);
}
if (distance >280) { // Define as distâncias bases de verificação
    digitalWrite(11 ,LOW);
    digitalWrite(12 ,HIGH);
    digitalWrite(13 ,LOW);
}
}
